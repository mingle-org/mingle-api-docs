openapi: 3.0.4
info:
  title: Mingle - OpenAPI
  description: API access to your recruiting data
  contact:
    email: hello@mingle.ro
  version: 1.0.0
servers:
  - url: https://api.mingle.ro/open-api/v1

paths:
  /candidates:
    get:
      tags: ["Candidate"]
      summary: "GET job candidates"
      description: Returns a collection with all job candidates.
      security:
        - ApiKeyAuth: []
      parameters:
        - name: "createdAfter"
          description: |
            An ISO-8601 date time for fetching only the candidates who were created after this date(exclusive). If the timezone designator is missing, then UTC will be assumed by the system.\
            Please note that the creation date is not equivalent to the date the candidate applied, so candidates who were retroactively imported will have a later creation date.
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "cursor"
          description: An opaque token poiting to the next page to retrieve.
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "limit"
          description: An integer specifying the number of candidates to retrieve per page. The max number of items in a page cannot be more than 100.
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "50"
            maximum: 100
            example: 50
        - name: "sort"
          description: |
            How to order the results:\
              'chronological' - Ascending order by creation date.\
              'new' - Newly created candidates are displayed first.
          in: "query"
          required: false
          schema:
            type: "string"
            default: "new"
            enum: [chronological, new]
            example: new
            description: >
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: "#/components/schemas/JobCandidate"
                  - $ref: "#/components/schemas/Slice"

        "400":
          description: "Bad request. Any of the specified request params is not valid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                code: 400
                message: "Missing/invalid sort param."
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                code: 401
                message: "Missing/invalid api key."

        "403":
          description: "Insufficient access permissions."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                code: 403
                message: "Forbidden"
components:
  schemas:
    Job:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: The unique identifier of the job.
          example: 1234
        title:
          type: "string"
          description: Job's title.
          example: "Office Manager"
    Attachment:
      type: "object"
      properties:
        filename:
          type: "string"
          description: The name of the attached file.
          example: "CV_John_Doe.pdf"
        mimeType:
          type: "string"
          description: The content type of the attached file.
          example: "application/pdf"
        url:
          type: "string"
          description: A pre-signed url with a validity up to 24 hours for downloading the attached file.
          example: "https://cdn.mingle.ro/attachments/512112?key=1233456789"
        type:
          type: "string"
          description: An enum specifying whether the file is the CV of the applicant or other document
          example: "CV"
          enum:
            - "CV"
            - "UNKNOWN"
    JobCandidate:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: An integer representing the candidate identifier.
          example: 123456
        name:
          type: "string"
          description: The candidate full name.
          example: John Doe
        email:
          type: "string"
          format: "email"
          description: The candidate e-mail address.
          example: john@mingle.ro
        phone:
          type: "string"
          description: The candidate phone number.
          example: "0718745724"
        createdAt:
          type: "string"
          format: "date-time"
          description: The date when the candidate was created.
          example: "2024-10-01T12:00:00Z"
        profileUrl:
          type: "string"
          example: "https://mingle.ro/hr/candidates/123456"
        job:
          $ref: "#/components/schemas/Job"
        attachments:
          type: "array"
          items:
            $ref: "#/components/schemas/Attachment"
    ErrorResponse:
      type: object
      properties:
        code:
          type: "integer"
          format: "int32"
          description: Http status code.
        message:
          type: "string"
          description: Human readable explanation of the error cause.
    Pagination:
      type: object
      properties:
        hasNext:
          type: "boolean"
          description: Indicates whether there is a next page.
          example: true
        cursor:
          type: "string"
          description: A fixed point in the ordered set of results that should be passed as a parameter to the same endpoint to retrieve the next page of results along with a new 'cursor' value
          example: MTcxNTU2NzcwNskyNDo4OTY5ODS
    Slice:
      type: object
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY

security:
  - ApiKeyAuth: []
